# -*- coding:utf-8 -*-
# from conf import db
import logging
import json
import csv, sys, os
reload(sys)
sys.setdefaultencoding('utf8')

from pymongo import MongoClient

#连接数据库
conn = MongoClient(host='127.0.0.1')
db = conn.aoao_test
file_name = './youjike_webhook_log.csv'
org_order_ids_list = []
count = 0

def find_order(org_order_id):
    """
    查看webhook_log表
    :param org_order_id:
    :return:
    """

    order = db.webhook_log.find_one({"org_order_id": org_order_id, "event": "order_done"}, {"event": 1,"request_data": 1})
    # order = db.webhook_log.find_one({"org_order_id": org_order_id})
    print order, count
    return order

def set_csv():
    """

    :return:
    """
    csv_file = file(file_name, 'wb')
    writer = csv.writer(csv_file)#'运单号'.encode('gbk'),
    _list = ['单号'.encode('utf-8'),'状态'.encode('utf-8'),'回告信息'.encode('utf-8')]
    writer.writerow(_list)
    writer.writerows(org_order_ids_list)
    csv_file.close()
    logging.info("%s", "==== set_shop_csv ====: 统计csv生成成功！")
    print "==== set_shop_csv ====: 统计csv生成成功！"

def deal():
    """

    :return:
    """
    org_order_idss = ("MD20170314200207100000108", "MD20170221154417100000110")
    org_order_ids = (1012033100445696,
                    1012033101953024,
                    1012033101756416,
                    1012033102595072,
                    1012033103051776,
                    1012033103216640,
                    1012033103559680,
                    1012033104210944,
                    1012033104596992,
                    1012033104807936,
                    1012033105620992,
                    1012033105812480,
                    1012033106950144,
                    1012033107228672,
                    1012033107337216,
                    1012033043323904,
                    1012033108269056,
                    1012033108936704,
                    1012033108215808,
                    1012033109822464,
                    1012033110163456,
                    1012033110296576,
                    1012033110784000,
                    1012033111202816,
                    1012033086265344,
                    1012033112418304,
                    1012033112585216,
                    1012033112815616,
                    1012033112849408,
                    1012033112824832,
                    1012033114023936,
                    1012033114594304,
                    1012032249672704,
                    1012033114350592,
                    1012033118064640,
                    1012033119063040,
                    1012033119465472,
                    1012033121492992,
                    1012033123693568,
                    1012033125222400,
                    1012033128526848,
                    1012033139822592,
                    1012033121294336,
                    1012033165998080,
                    1012033166253056,
                    1012033166618624,
                    1012033167033344,
                    1012033169334272,
                    1012033170203648,
                    1012033170529280,
                    1012033170758656,
                    1012033170633728,
                    1012033171093504,
                    1012033170963456,
                    1012033171658752,
                    1012033171052544,
                    1012033171938304,
                    1012033116236800,
                    1012033173061632,
                    1012033173982208,
                    1012033174317056,
                    1012033174961152,
                    1012033175138304,
                    1012033175399424,
                    1012033176544256,
                    1012033176613888,
                    1012033176909824,
                    1012033176378368,
                    1012033177345024,
                    1012033178762240,
                    1012033179072512,
                    1012033178549248,
                    1012033179955200,
                    1012033180168192,
                    1012033179973632,
                    1012033181803520,
                    1012033183993856,
                    1012033184621568,
                    1012033184978944,
                    1012033184842752,
                    1012033185067008,
                    1012033185131520,
                    1012033185738752,
                    1012033187494912,
                    1012033188077568,
                    1012033188668416,
                    1012033188755456,
                    1012033189047296,
                    1012033190152192,
                    1012033190351872,
                    1012033190803456,
                    1012033190923264,
                    1012033190297600,
                    1012033191427072,
                    1012033191026688,
                    1012033192064000,
                    1012033192347648,
                    1012033192686592,
                    1012033193154560,
                    1012033193464832,
                    1012033193556992,
                    1012033194386432,
                    1012033194481664,
                    1012033194486784,
                    1012033194957824,
                    1012033195018240,
                    1012033195405312,
                    1012033195611136,
                    1012033195771904,
                    1012033195788288,
                    1012033196513280,
                    1012033196972032,
                    1012033198704640,
                    1012033198780416,
                    1012033002600448,
                    1012033201269760,
                    1012033201636352,
                    1012033201853440,
                    1012033202297856,
                    1012033202223104,
                    1012033202518016,
                    1012033202701312,
                    1012033202382848,
                    1012033202902016,
                    1012033203900416,
                    1012033204413440,
                    1012033204895744,
                    1012033205431296,
                    1012033206291456,
                    1012033206477824,
                    1012033207128064,
                    1012033207430144,
                    1012033207682048,
                    1012033207890944,
                    1012033207644160,
                    1012033209618432,
                    1012033209706496,
                    1012033209345024)
    for org_order_id in org_order_idss:
        # print 'request_data:', find_order(str(org_order_id)).get('request_data'),'event:', find_order(org_order_id).get('event')
        request_data = find_order(str(org_order_id)).get('request_data', None)
        event = find_order(str(org_order_id)).get('event', None)
        param = [
            str(org_order_id).encode('gbk'),
            str(event).encode('gbk'),
            str(request_data).encode('gbk')
        ]
        org_order_ids_list.append(param)
    set_csv()

if __name__ == '__main__':
    deal()
